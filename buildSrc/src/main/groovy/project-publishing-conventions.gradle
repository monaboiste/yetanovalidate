/*
 * Nebula release plugin notes:
 * - the plugin can be only applied on the root level
 * - the plugin does not support the multiple project release from the same
 *   repository - all artefacts must have the same version
 */

plugins {
    id 'maven-publish'
}

gradle.rootProject {
    apply plugin: 'nebula.release'

    nebulaRelease {
        releaseBranchPatterns = [/master/]
    }

    ext['release.sanitizeVersion'] = true
}
gradle.rootProject.tasks.release.dependsOn(tasks.assemble, tasks.check)

tasks.register('printVersion') {
    group 'versioning'
    description 'Print project version'

    println project.version
}

publishing {
    publications {
        yetanovalidate(MavenPublication) {
            from components.java
            versionMapping {
                // use the versions resolved on the runtimeClasspath for dependencies declared in api
                // which are mapped to compile scope (default)
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                // use the versions resolved on the runtimeClasspath for dependencies declared in implementation
                // which are mapped to the runtime scope (default)
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}

tasks.publish.dependsOn(tasks.assemble, tasks.check)
